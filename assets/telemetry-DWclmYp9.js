import{M as x,i as c,c as m}from"./index-B72CjnCX.js";const O=x("telemetry",()=>{const r=c([]),v=c([]),o=c({}),u=c([]),d=c({}),_=c({tempHigh:75,cpuHigh:.85,staleMs:12e4}),h=c({deviceCount:5,intervalMs:1500,batchSize:10,tempNoise:30}),p=c(!1),f=c(!1),S=m(()=>r.value.length),k=m(()=>Object.keys(o.value).length),b=m(()=>u.value.length),y=m(()=>u.value.slice(0,50));function w(t){if(!t.length)return;r.value.unshift(...t),r.value.length>500&&r.value.splice(500);const l={};for(const e of t){const a=new Date(e.ts),i=new Date(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours(),a.getMinutes()).toISOString(),s=i+"|"+e.device_id+"|"+e.metric;l[s]||(l[s]={bucket_start:i,device_id:e.device_id,metric:e.metric,count:0,avg_val:0,min_val:e.value,max_val:e.value});const n=l[s];n.count++,n.avg_val+=e.value,e.value<n.min_val&&(n.min_val=e.value),e.value>n.max_val&&(n.max_val=e.value)}for(const e of Object.values(l)){e.avg_val=e.avg_val/e.count;const a=v.value.findIndex(i=>i.bucket_start===e.bucket_start&&i.device_id===e.device_id&&i.metric===e.metric);a>=0?v.value[a]=e:v.value.unshift(e)}v.value.length>500&&v.value.splice(500);for(const e of t){const a=e.device_id+"|"+e.metric;let i=d.value[a];i||(i=d.value[a]=[]),i.push(e.value),i.length>50&&i.splice(0,i.length-50);const s=o.value[e.device_id]||{device_id:e.device_id,last_event_ts:e.ts,last_values:{},status:"OK"};s.last_values[e.metric]=e.value,s.last_event_ts=e.ts;let n="OK";((s.last_values.temp??0)>_.value.tempHigh||(s.last_values.cpu??0)>_.value.cpuHigh)&&(n="ALERT"),s.status=n,o.value[e.device_id]=s,n==="ALERT"&&g({device_id:e.device_id,metric:e.metric,value:e.value,kind:"threshold"})}}function g(t){const l={id:Date.now().toString(36)+Math.random().toString(36).slice(2,6),ts:new Date().toISOString(),device_id:t.device_id,metric:t.metric,message:`${t.metric} ${t.kind==="stale"?"stale":"exceeded"} (${t.value.toFixed(2)})`,severity:t.kind==="threshold"?"crit":"warn"};u.value.unshift(l),u.value.length>200&&u.value.splice(200)}function A(t=_.value.staleMs){const l=Date.now();for(const e of Object.values(o.value)){const a=l-new Date(e.last_event_ts).getTime();a>t&&e.status!=="ALERT"&&(e.status="STALE",g({device_id:e.device_id,metric:"heartbeat",value:a/1e3,kind:"stale"}))}}async function D(){p.value=!0,f.value=!1}function M(){r.value=[],v.value=[],o.value={},u.value=[],d.value={}}return setInterval(()=>A(),15e3),{rawEvents:r,minuteAggs:v,deviceState:o,alerts:u,thresholds:_,simulator:h,series:d,totalEvents:S,activeDevices:k,alertCount:b,recentAlerts:y,ingestLocalBatch:w,clearAll:M,initRealtime:D,realtimeEnabled:f,getSeries(t,l){return d.value[t+"|"+l]||[]}}},{persist:{key:"telemetry",paths:["thresholds","simulator"]}});export{O as u};
